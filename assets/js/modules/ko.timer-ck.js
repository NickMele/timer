// the timer object that will be used as our view model
app.modules.ko.Timer=function(){"use strict";var e=this;e.sockets={getTimers:"get:timers",setCurrentTimer:"set:current_timer",startTimer:"start:timer",pauseTimer:"pause:timer",resetTimer:"reset:timer"};e.elements={};e.state={currentTimer:ko.observable(""),timerZoneVisible:ko.observable(!1)};e.data={timers:ko.observableArray()};e.setupSocketListeners=function(){e.socket.on(e.sockets.getTimers,e.setTimers);e.socket.on(e.sockets.setCurrentTimer,e.setCurrentTimer)};e.setCurrentTimer=function(t){e.state.currentTimer(t);e.socket.emit(e.sockets.setCurrentTimer,t)};e.getTimers=function(){e.socket.emit(e.sockets.getTimers,e.setTimers)};e.setTimers=function(t){e.data.timers(t.data)};e.state.currentTimer.subscribe(function(t){e.socket.emit(e.sockets.setCurrentTimer);e.state.timerZoneVisible(!0)});e.init=function(){e.socket=io.connect();e.socket.emit("ready");e.getTimers()}};$(window).on("load",function(){"use strict";app.viewModel=new app.modules.ko.Timer;ko.applyBindings(app.viewModel);app.viewModel.init();$(window).trigger("ko.binded")});